<?php
/**
 * You must manually enable this in the menu list, for some reason
 * (even though the test itself enables the module).
 */

require_once drupal_get_path('module', 'simpletest') . '/drupal_web_test_case.php';

class MockStripe {
    public static $resources = array(
        'charges' => array(),
        'customers' => array(),
        'subscriptions' => array()
    );

    public function add_resource($name, $value) {
        if( !isset(self::$resources[$name]) ) {
            self::$resources[$name] = array();
        }

        self::$resources[$name][] = $value;

        variable_set('mock_stripe_resources', self::$resources);
    }

    public function get_resources() {
        debug( self::$resources, 'initialized resources');
        self::$resources = variable_get('mock_stripe_resources', self::$resources);

        return self::$resources;
    }
}

function mock_stripe_menu() {
    debug('mock_stripe', 'menu hook');

    $routes = array();

    $routes['mock_stripe/v1/charges'] = array(
        'page callback' => 'mock_stripe_new_charge',
        'access callback' => TRUE,
        'delivery callback' => 'drupal_json_output',
        'type' => MENU_CALLBACK
    );

    $routes['mock_stripe/v1/plans'] = array(
        'page callback' => 'mock_stripe_new_plan',
        'access callback' => TRUE,
        'delivery callback' => 'drupal_json_output',
        'type' => MENU_CALLBACK
    );

    $routes['mock_stripe/v1/customers'] = array(
        'page callback' => 'mock_sripe_customers',
        'access callback' => TRUE,
        'delivery callback' => 'drupal_json_output',
        'type' => MENU_CALLBACK
    );

    $routes['mock_stripe/mock/resources'] = array(
        'page callback' => 'mock_stripe_resources',
        'access callback' => TRUE,
        'delivery callback' => 'drupal_json_output',
        'type' => MENU_CALLBACK
    );

    return $routes;
}

function mock_stripe_new_charge() {
    debug('mock_stripe_new_charge');

    $amount = $_POST['amount'];
    $currency = $_POST['currency'];
    $card = $_POST['card'];

    $charge = array(
        'amount' => $amount,
        'currency' => $currency,
        'card' => $card
    );

    MockStripe::add_resource('charges', $charge);

    $result = array(
        "id" => "ch_1lT890FuPdj9xX",
        "object" => "charge",
        "created" => 1367637544,
        "livemode" => false,
        "paid" => true,
        "amount" => 12500,
        "currency" => "usd",
        "refunded" => false,
        "fee" => 393,
        "fee_details" => array(
            array(
                "amount" => 393,
                "currency" => $currency,
                "type" => "stripe_fee",
                "description" => "Stripe processing fees",
                "application" => null,
                "amount_refunded_refunded" => 0
            )
        ),
        "card" => array(
            "object" => "card",
            "last4" => "4242",
            "type" => "Visa",
            "exp_month" => 5,
            "exp_year" => 2013,
            "fingerprint" => "rYy7SbfzoN030SaO",
            "country" => "US",
            "name" => "A User",
            "address_line1" => null,
            "address_line2" => null,
            "address_city" => null,
            "address_state" => null,
            "address_zip" => null,
            "address_country" => null,
            "cvc_check" => "pass",
            "address_line1_check" => null,
            "address_zip_check" => null
        ),
        "captured" => true,
        "failure_message" => null,
        "amount_refunded" => 0,
        "customer" => null,
        "invoice" => null,
        "description" => "Order Number: 3",
        "dispute" => null
    );

    return $result;
}

function mock_stripe_new_plan() {
    $new_plan = array(
        'id' => $POST['id'],
        'amount' => $POST['amount'],
        'currency' => $POST['currency'],
        'interval' => $POST['interval'],
        'name' => $POST['name']
    );
    
    MockStripe::add_resource('plans', $new_plan);

    return array_merge($new_plan, array(
        'object' => 'plan',
        'livemode' => false,
        'interval_count' => 1,
        'trial_period_days' => null
    ));
}

function mock_stripe_customers($customerId, $subresource) {
    if( $customerId != null && $subresource == 'subscription' ) {
        return mock_stripe_new_subscription($customerId);
    }
    else {
        return mock_stripe_new_customer();
    }
}

function mock_stripe_new_customer() {
    $new_customer = array(
        'card' => $POST['card'],
        'description' => $POST['description'],
        'email' => $POST['email']
    );
    
    MockStripe::add_resource('customers', $new_customer);

    return array(
        'object' => 'customer',
        'livemode' => false,
        'id' => 'cus_6789',
        'created' => 1343600622,
        'description' => $new_customer['description'],
        'active_card' => $new_customer['card'],
        'email' => $new_customer['email'],
        'delinquent' => false,
        'subscription' => null,
        'discount' => null,
        'account_balance' => 0
    );
}

function mock_stripe_new_subscription($customerId) {

}

function mock_stripe_resources() {
    $result = MockStripe::get_resources();

    return $result;
}